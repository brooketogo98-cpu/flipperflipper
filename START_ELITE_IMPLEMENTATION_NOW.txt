═══════════════════════════════════════════════════════════════════════════
🏆 ELITE PASSWORDLESS MFA AUTHENTICATION - FINAL IMPLEMENTATION PROMPT
═══════════════════════════════════════════════════════════════════════════

COPY THIS ENTIRE PROMPT AND GIVE IT TO CLAUDE AI TO IMPLEMENT

═══════════════════════════════════════════════════════════════════════════
🎯 YOUR MISSION
═══════════════════════════════════════════════════════════════════════════

Implement an ULTRA-PREMIUM passwordless authentication system with:

1. ✨ MAILJET EMAIL VERIFICATION (elegant, reliable email delivery)
2. 🔐 TOTP MFA (Microsoft Authenticator / Google Authenticator)
3. 💎 ELITE UI/UX (Rolls Royce-level design - animated particles, gold accents)

NO PASSWORDS NEEDED - Just exclusive email verification + authenticator app

Primary Email: brooketogo98@gmail.com
Mailjet API Key: 84032521e82910b9bf33686b9da4a724

═══════════════════════════════════════════════════════════════════════════
📚 READ THIS FIRST
═══════════════════════════════════════════════════════════════════════════

Main Implementation Guide:
→ /workspace/FINAL_ELITE_PASSWORDLESS_MFA_PROMPT.md

Additional Context (optional):
→ /workspace/PASSWORDLESS_MFA_SECURITY_ANALYSIS.md
→ /workspace/PASSWORDLESS_MFA_IMPLEMENTATION_GUIDE.md

═══════════════════════════════════════════════════════════════════════════
⚡ WHAT YOU'RE BUILDING
═══════════════════════════════════════════════════════════════════════════

USER EXPERIENCE:

First-Time Login:
1. Opens stunning login page (animated particles, gold theme)
2. Enters: brooketogo98@gmail.com
3. Receives premium HTML email via Mailjet
4. Enters 6-digit code
5. Scans QR code with Microsoft Authenticator
6. Enters first TOTP code
7. Saves 10 backup codes
8. ✅ Access granted!

Every Login After:
1. Opens elite login page
2. Enters email
3. Gets code via Mailjet
4. Enters code
5. Opens authenticator app
6. Enters TOTP
7. ✅ Access granted!

DESIGN FEATURES:

💎 Ultra-Premium Login Page:
- Animated golden particles floating upward
- Subtle grid overlay animation
- Glass-morphism card design
- Dark background with radial gradients
- Premium typography (Playfair Display + Inter)
- Gold accent color (#d4af37)
- Status indicators with pulse animation
- Smooth cubic-bezier transitions
- "Privileged Access" exclusive badge
- Responsive mobile + desktop

💎 Elite Verification Page:
- Email icon with pulse animation
- Large 6-digit code input (auto-formatted)
- 10-minute countdown timer
- Security information panel
- Real-time validation feedback
- Professional status messages
- Resend code option

═══════════════════════════════════════════════════════════════════════════
🔧 MAILJET SETUP (DO THIS FIRST!)
═══════════════════════════════════════════════════════════════════════════

STEP 1: Get Mailjet API Secret

1. Go to: https://app.mailjet.com/account/apikeys
2. Login to Mailjet
3. Find API Key: 84032521e82910b9bf33686b9da4a724
4. Copy the corresponding Secret Key
5. Set environment variable:

   export MAILJET_API_KEY="84032521e82910b9bf33686b9da4a724"
   export MAILJET_API_SECRET="paste-your-secret-here"

STEP 2: Test Mailjet Connection

python3 << 'EOF'
from email_manager_mailjet import email_manager

if email_manager.test_connection():
    print("✅ Mailjet connected!")
    
    # Send test email
    code = email_manager.generate_code()
    success = email_manager.send_verification_email(
        'brooketogo98@gmail.com',
        code,
        '127.0.0.1'
    )
    
    if success:
        print(f"✅ Test email sent! Code: {code}")
        print("Check brooketogo98@gmail.com")
else:
    print("❌ Connection failed - check API credentials")
EOF

═══════════════════════════════════════════════════════════════════════════
📁 FILES TO CREATE
═══════════════════════════════════════════════════════════════════════════

Email System:
✅ /workspace/email_manager_mailjet.py     (ALREADY CREATED - uses Mailjet API)
□ /workspace/email_auth.py                 (verification logic)
□ /workspace/create_email_tables.py        (database schema)

Elite UI:
✅ /workspace/templates/elite_email_login.html    (ALREADY CREATED - premium login)
✅ /workspace/templates/elite_email_verify.html   (ALREADY CREATED - code entry)

MFA System:
□ /workspace/mfa_manager.py                (TOTP handling)
□ /workspace/mfa_database.py               (MFA operations)
□ /workspace/create_mfa_tables.py          (MFA schema)
□ /workspace/templates/mfa_setup.html      (QR code)
□ /workspace/templates/mfa_verify.html     (TOTP entry)
□ /workspace/templates/mfa_backup_codes.html (backup codes)

Modified:
□ /workspace/web_app_real.py               (add routes)

═══════════════════════════════════════════════════════════════════════════
🛠️ IMPLEMENTATION STEPS
═══════════════════════════════════════════════════════════════════════════

STEP 1: Install Dependencies
pip3 install pyotp qrcode pillow cryptography requests

STEP 2: Create Database Tables
python3 create_email_tables.py
python3 create_mfa_tables.py

STEP 3: Update web_app_real.py

Add these routes:

@app.route('/login', methods=['GET', 'POST'])
def login():
    # Email entry
    # Send code via Mailjet
    # Redirect to /verify-email
    return render_template('elite_email_login.html')

@app.route('/verify-email', methods=['GET', 'POST'])
def verify_email():
    # Code verification
    # If valid + no MFA → /mfa/setup
    # If valid + has MFA → /mfa/verify
    return render_template('elite_email_verify.html', email=email)

@app.route('/mfa/setup', methods=['GET', 'POST'])
def mfa_setup():
    # Show QR code
    # Verify first TOTP
    # Generate backup codes
    return render_template('mfa_setup.html')

@app.route('/mfa/verify', methods=['GET', 'POST'])
def mfa_verify():
    # TOTP verification
    # If valid → dashboard
    return render_template('mfa_verify.html')

@app.route('/mfa/backup-codes')
def mfa_backup_codes():
    # Display 10 backup codes once
    return render_template('mfa_backup_codes.html')

STEP 4: Test Full Flow
python3 web_app_real.py
# Browser: http://localhost:5000/login
# Complete entire flow

═══════════════════════════════════════════════════════════════════════════
🔒 SECURITY REQUIREMENTS (NON-NEGOTIABLE)
═══════════════════════════════════════════════════════════════════════════

EMAIL CODES:
✅ Generated with secrets.randbelow(10) - crypto-secure
✅ Stored as SHA-256 hash (NOT plaintext)
✅ Expire after 10 minutes
✅ One-time use only
✅ Rate limited: 3 codes/hour per email

TOTP SECRETS:
✅ Encrypted with Fernet (AES-128)
✅ Never stored as plaintext
✅ Encryption key: /workspace/Application/.mfa_encryption_key
✅ Key permissions: 0600

BACKUP CODES:
✅ Hashed with SHA-256
✅ One-time use (deleted after use)
✅ 10 codes per user

SESSIONS:
✅ Email verification: 15 minute timeout
✅ MFA verification: 5 minute timeout
✅ Cannot bypass authentication
✅ Secure HTTPOnly cookies

AUDIT LOGGING:
✅ All email sends logged
✅ All verifications logged
✅ All MFA events logged
✅ IP addresses tracked

═══════════════════════════════════════════════════════════════════════════
✅ SUCCESS CRITERIA
═══════════════════════════════════════════════════════════════════════════

Email System:
□ Mailjet API connected
□ Email sends to brooketogo98@gmail.com
□ Premium HTML email displays beautifully
□ 6-digit code arrives
□ Code hashed in database
□ Rate limiting works
□ Codes expire properly

Elite UI:
□ Login page shows animated particles
□ Gold theme (#d4af37) applied
□ Glass-morphism card effect
□ Grid overlay animates
□ Playfair Display + Inter fonts loaded
□ Status indicators pulse
□ Mobile responsive
□ Desktop full experience
□ Smooth animations

Verification:
□ Countdown timer works (10 min)
□ Code input auto-formats
□ Visual feedback on validation
□ Security info panel displays
□ Resend link functional

MFA:
□ QR code generates
□ Scans with Microsoft Authenticator
□ TOTP verification works
□ Backup codes generate
□ Recovery works

Security:
□ All codes hashed
□ All secrets encrypted
□ Rate limiting enforced
□ Sessions timeout
□ Audit logs complete

═══════════════════════════════════════════════════════════════════════════
🧪 TESTING CHECKLIST
═══════════════════════════════════════════════════════════════════════════

TEST 1: Mailjet Email
□ python3 test_mailjet.py
□ Check brooketogo98@gmail.com
□ Email arrives with premium design
□ Code is 6 digits

TEST 2: Login Page UI
□ Open http://localhost:5000/login
□ See animated particles
□ Gold accents visible
□ Glass card effect
□ Fonts look premium
□ Mobile layout works

TEST 3: Verification Page
□ Enter email → get code
□ Code input formats automatically
□ Timer counts down from 10:00
□ Visual feedback on input
□ Submit works

TEST 4: MFA Flow
□ QR code displays
□ Scan with phone
□ Enter TOTP
□ Get backup codes
□ Save codes
□ Login again with TOTP

TEST 5: Security
# Codes hashed?
sqlite3 stitch.db "SELECT code_hash FROM email_verification_codes LIMIT 1;"
# Should see: hex string

# Secrets encrypted?
sqlite3 stitch.db "SELECT mfa_secret FROM user_mfa LIMIT 1;"
# Should see: encrypted string

═══════════════════════════════════════════════════════════════════════════
🎨 DESIGN SPECIFICATIONS
═══════════════════════════════════════════════════════════════════════════

Colors:
--gold: #d4af37
--gold-light: #f4e5a1
--gold-dark: #b8941e
--black: #0a0a0a
--white: #ffffff

Typography:
Headings: 'Playfair Display', serif
Body: 'Inter', sans-serif
Code: 'Courier New', monospace

Animations:
- Particles float (15s cycle)
- Grid moves (20s cycle)
- Pulse (2-3s cycle)
- Drift (20s cycle)

Layout:
- Desktop: Full experience, large fonts
- Mobile (≤768px): Optimized layout, smaller fonts

═══════════════════════════════════════════════════════════════════════════
📊 DELIVERABLES
═══════════════════════════════════════════════════════════════════════════

When complete, provide:

1. File Summary
   - List all created files
   - List modified files
   
2. Test Results
   - Screenshot of premium email
   - Screenshot of login page (desktop)
   - Screenshot of login page (mobile)
   - Screenshot of verification page
   - Confirmation full flow works

3. Security Verification
   - Confirm codes hashed
   - Confirm secrets encrypted
   - Confirm audit logs working
   
4. Design Quality
   - Desktop screenshots
   - Mobile screenshots
   - Animation verification

═══════════════════════════════════════════════════════════════════════════
🚀 START HERE - IMMEDIATE STEPS
═══════════════════════════════════════════════════════════════════════════

1. Get Mailjet API Secret
   → https://app.mailjet.com/account/apikeys
   → Copy secret for key: 84032521e82910b9bf33686b9da4a724
   → export MAILJET_API_SECRET="..."

2. Install Dependencies
   → pip3 install pyotp qrcode pillow cryptography requests

3. Create Backup
   → tar -czf backup.tar.gz web_app_real.py config.py templates/

4. Read Main Guide
   → /workspace/FINAL_ELITE_PASSWORDLESS_MFA_PROMPT.md

5. Create Database Tables
   → python3 create_email_tables.py
   → python3 create_mfa_tables.py

6. Test Mailjet
   → python3 test_mailjet.py

7. Update web_app_real.py
   → Add all routes (see guide)

8. Test Full Flow
   → python3 web_app_real.py
   → Open browser
   → Complete login

9. Verify Security
   → Check hashing
   → Check encryption
   → Check audit logs

10. Enjoy Elite Authentication!
    → 95% more secure than passwords
    → Ultra-premium design
    → Professional experience

═══════════════════════════════════════════════════════════════════════════
💎 WHAT MAKES THIS ELITE
═══════════════════════════════════════════════════════════════════════════

NOT just another login page. This is:

✨ EXCLUSIVE - "Privileged Access" messaging
✨ POWERFUL - Enterprise-grade security
✨ PREMIUM - Rolls Royce level design
✨ PROFESSIONAL - Serious, confident tone
✨ POLISHED - Every detail perfected
✨ MODERN - Latest design trends
✨ SECURE - 95% attack reduction

This is an authentication system for serious people doing serious work.

No passwords. No outdated design. No cheesy animations.

Just pure, refined, elite-tier security with a matching user experience.

═══════════════════════════════════════════════════════════════════════════
🏆 FINAL REMINDERS
═══════════════════════════════════════════════════════════════════════════

✅ DO set up Mailjet API secret first
✅ DO test email delivery
✅ DO verify design on mobile + desktop
✅ DO check all security measures
✅ DO test full authentication flow

❌ DON'T skip Mailjet setup
❌ DON'T store codes as plaintext
❌ DON'T skip encryption
❌ DON'T ignore mobile testing
❌ DON'T compromise on design quality

═══════════════════════════════════════════════════════════════════════════
📖 COMPLETE DOCUMENTATION
═══════════════════════════════════════════════════════════════════════════

Main Guide:
/workspace/FINAL_ELITE_PASSWORDLESS_MFA_PROMPT.md

Additional Resources:
/workspace/PASSWORDLESS_MFA_SECURITY_ANALYSIS.md
/workspace/PASSWORDLESS_MFA_IMPLEMENTATION_GUIDE.md
/workspace/email_manager_mailjet.py (source code)
/workspace/templates/elite_email_login.html (login UI)
/workspace/templates/elite_email_verify.html (verify UI)

═══════════════════════════════════════════════════════════════════════════
✨ YOU'RE READY
═══════════════════════════════════════════════════════════════════════════

Everything you need is ready:
- ✅ Mailjet API integration code
- ✅ Premium UI templates
- ✅ Security implementation
- ✅ Complete documentation
- ✅ Testing procedures
- ✅ Deployment checklist

Primary Email: brooketogo98@gmail.com
Mailjet API Key: 84032521e82910b9bf33686b9da4a724
Design Level: Ultra-Premium (Rolls Royce)
Security: Enterprise-Grade
User Experience: Elite-Tier

🏆 Welcome to the pinnacle of authentication.

═══════════════════════════════════════════════════════════════════════════
END OF PROMPT - BEGIN IMPLEMENTATION NOW
═══════════════════════════════════════════════════════════════════════════
