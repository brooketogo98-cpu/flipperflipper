name: No Static Content Guard

on:
  pull_request:
  push:
    branches: [main]

jobs:
  check-static-content:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Check for forbidden static content
        run: |
          echo "Scanning for production-breaking static content..."
          
          # Define forbidden patterns
          PATTERNS="mock\(|mockData|fakeData|dummyData|testData|stubbed|TODO:|FIXME:|lorem|staticData|placeholder.*=.*[\"\']|generatePlaceholder"
          
          # Scan source files (excluding tests and docs)
          FOUND=0
          while IFS= read -r file; do
            if grep -E "$PATTERNS" "$file" 2>/dev/null; then
              echo "❌ Found static content in: $file"
              grep -n -E "$PATTERNS" "$file" || true
              FOUND=1
            fi
          done < <(find extension/src -name "*.ts" -o -name "*.tsx" | grep -v ".test." | grep -v ".spec.")
          
          # Scan dist files for placeholder messages
          if [ -d "extension/dist" ]; then
            if grep -r "Full functionality is available\|This is the.*section" extension/dist 2>/dev/null; then
              echo "❌ Found placeholder messages in dist folder"
              FOUND=1
            fi
          fi
          
          if [ $FOUND -eq 1 ]; then
            echo "Build failed: Static content detected in production code"
            exit 1
          else
            echo "✅ No static content found"
          fi
      
      - name: Verify real implementation markers
        run: |
          echo "Checking for required implementation markers..."
          
          # Check that key files have real implementations
          REQUIRED_IMPLEMENTATIONS=(
            "chrome.storage.local.get"
            "chrome.alarms.create"
            "chrome.tabs.create"
            "chrome.runtime.sendMessage"
          )
          
          MISSING=0
          for pattern in "${REQUIRED_IMPLEMENTATIONS[@]}"; do
            if ! grep -r "$pattern" extension/src --include="*.ts" --include="*.tsx" 2>/dev/null | grep -v ".test."; then
              echo "❌ Missing implementation: $pattern"
              MISSING=1
            fi
          done
          
          if [ $MISSING -eq 1 ]; then
            echo "Build failed: Missing required implementations"
            exit 1
          else
            echo "✅ All required implementations found"
          fi